---- NGX_MAX_INT_T_VALUE Matches (0 in 0 files) ----
---- ngx_get_conf Matches (22 in 8 files) ----
main in nginx.c (src\core) :     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
ngx_set_environment in nginx.c (src\core) :     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
ngx_exec_new_binary in nginx.c (src\core) :     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
ngx_get_cpu_affinity in nginx.c (src\core) :     ccf = (ngx_core_conf_t *) ngx_get_conf(ngx_cycle->conf_ctx,
ngx_conf_file.h (src\core) line 225 : #define ngx_get_conf(conf_ctx, module)  conf_ctx[module.index]
ngx_init_cycle in ngx_cycle.c (src\core) :     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
ngx_init_cycle in ngx_cycle.c (src\core) :         old_ccf = (ngx_core_conf_t *) ngx_get_conf(old_cycle->conf_ctx,
ngx_init_cycle in ngx_cycle.c (src\core) :         old_ccf = (ngx_core_conf_t *) ngx_get_conf(old_cycle->conf_ctx,
ngx_delete_pidfile in ngx_cycle.c (src\core) :     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
ngx_signal_process in ngx_cycle.c (src\core) :     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
ngx_event_module_init in ngx_event.c (src\event) :     cf = ngx_get_conf(cycle->conf_ctx, ngx_events_module);
ngx_event_module_init in ngx_event.c (src\event) :     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
ngx_event_process_init in ngx_event.c (src\event) :     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
ngx_event_init_conf in ngx_event.c (src\event) :     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
ngx_event_get_conf in ngx_event.h (src\event) :              (*(ngx_get_conf(conf_ctx, ngx_events_module))) [module.ctx_index];
ngx_google_perftools_worker in ngx_google_perftools_module.c (src\misc) :                 ngx_get_conf(cycle->conf_ctx, ngx_google_perftools_module);
ngx_debug_point in ngx_process.c (src\os\unix) :     ccf = (ngx_core_conf_t *) ngx_get_conf(ngx_cycle->conf_ctx,
ngx_master_process_cycle in ngx_process_cycle.c (src\os\unix) :     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
ngx_master_process_cycle in ngx_process_cycle.c (src\os\unix) :             ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx,
ngx_reap_children in ngx_process_cycle.c (src\os\unix) :                 ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx,
ngx_worker_process_cycle in ngx_process_cycle.c (src\os\unix) :     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
ngx_worker_process_init in ngx_process_cycle.c (src\os\unix) :     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
---- ngx_modules Matches (121 in 12 files) ----
main in nginx.c (src\core) :     for (i = 0; ngx_modules[i]; i++) {
main in nginx.c (src\core) :         ngx_modules[i]->index = ngx_max_module++;
ngx_conf_handler in ngx_conf_file.c (src\core) :     for (i = 0; ngx_modules[i]; i++) {
ngx_conf_handler in ngx_conf_file.c (src\core) :         if (ngx_modules[i]->type != NGX_CONF_MODULE
ngx_conf_handler in ngx_conf_file.c (src\core) :             && ngx_modules[i]->type != cf->module_type)
ngx_conf_handler in ngx_conf_file.c (src\core) :         cmd = ngx_modules[i]->commands;
ngx_conf_handler in ngx_conf_file.c (src\core) :                 conf = ((void **) cf->ctx)[ngx_modules[i]->index];
ngx_conf_handler in ngx_conf_file.c (src\core) :                 conf = &(((void **) cf->ctx)[ngx_modules[i]->index]);
ngx_conf_handler in ngx_conf_file.c (src\core) :                     conf = confp[ngx_modules[i]->ctx_index];
ngx_conf_file.h (src\core) line 344 : extern ngx_module_t  *ngx_modules[];
ngx_init_cycle in ngx_cycle.c (src\core) :     for (i = 0; ngx_modules[i]; i++) {
ngx_init_cycle in ngx_cycle.c (src\core) :         if (ngx_modules[i]->type != NGX_CORE_MODULE) {
ngx_init_cycle in ngx_cycle.c (src\core) :         module = ngx_modules[i]->ctx;
ngx_init_cycle in ngx_cycle.c (src\core) :             cycle->conf_ctx[ngx_modules[i]->index] = rv;
ngx_init_cycle in ngx_cycle.c (src\core) :     for (i = 0; ngx_modules[i]; i++) {
ngx_init_cycle in ngx_cycle.c (src\core) :         if (ngx_modules[i]->type != NGX_CORE_MODULE) {
ngx_init_cycle in ngx_cycle.c (src\core) :         module = ngx_modules[i]->ctx;
ngx_init_cycle in ngx_cycle.c (src\core) :             if (module->init_conf(cycle, cycle->conf_ctx[ngx_modules[i]->index])
ngx_init_cycle in ngx_cycle.c (src\core) :     for (i = 0; ngx_modules[i]; i++) {
ngx_init_cycle in ngx_cycle.c (src\core) :         if (ngx_modules[i]->init_module) {
ngx_init_cycle in ngx_cycle.c (src\core) :             if (ngx_modules[i]->init_module(cycle) != NGX_OK) {
ngx_event_process_init in ngx_event.c (src\event) :     for (m = 0; ngx_modules[m]; m++) {
ngx_event_process_init in ngx_event.c (src\event) :         if (ngx_modules[m]->type != NGX_EVENT_MODULE) {
ngx_event_process_init in ngx_event.c (src\event) :         if (ngx_modules[m]->ctx_index != ecf->use) {
ngx_event_process_init in ngx_event.c (src\event) :         module = ngx_modules[m]->ctx;
ngx_events_block in ngx_event.c (src\event) :     for (i = 0; ngx_modules[i]; i++) {
ngx_events_block in ngx_event.c (src\event) :         if (ngx_modules[i]->type != NGX_EVENT_MODULE) {
ngx_events_block in ngx_event.c (src\event) :         ngx_modules[i]->ctx_index = ngx_event_max_module++;
ngx_events_block in ngx_event.c (src\event) :     for (i = 0; ngx_modules[i]; i++) {
ngx_events_block in ngx_event.c (src\event) :         if (ngx_modules[i]->type != NGX_EVENT_MODULE) {
ngx_events_block in ngx_event.c (src\event) :         m = ngx_modules[i]->ctx;
ngx_events_block in ngx_event.c (src\event) :             (*ctx)[ngx_modules[i]->ctx_index] = m->create_conf(cf->cycle);
ngx_events_block in ngx_event.c (src\event) :             if ((*ctx)[ngx_modules[i]->ctx_index] == NULL) {
ngx_events_block in ngx_event.c (src\event) :     for (i = 0; ngx_modules[i]; i++) {
ngx_events_block in ngx_event.c (src\event) :         if (ngx_modules[i]->type != NGX_EVENT_MODULE) {
ngx_events_block in ngx_event.c (src\event) :         m = ngx_modules[i]->ctx;
ngx_events_block in ngx_event.c (src\event) :             rv = m->init_conf(cf->cycle, (*ctx)[ngx_modules[i]->ctx_index]);
ngx_event_use in ngx_event.c (src\event) :     for (m = 0; ngx_modules[m]; m++) {
ngx_event_use in ngx_event.c (src\event) :         if (ngx_modules[m]->type != NGX_EVENT_MODULE) {
ngx_event_use in ngx_event.c (src\event) :         module = ngx_modules[m]->ctx;
ngx_event_use in ngx_event.c (src\event) :                 ecf->use = ngx_modules[m]->ctx_index;
ngx_event_init_conf in ngx_event.c (src\event) :         for (i = 0; ngx_modules[i]; i++) {
ngx_event_init_conf in ngx_event.c (src\event) :             if (ngx_modules[i]->type != NGX_EVENT_MODULE) {
ngx_event_init_conf in ngx_event.c (src\event) :             event_module = ngx_modules[i]->ctx;
ngx_event_init_conf in ngx_event.c (src\event) :             module = ngx_modules[i];
ngx_http_block in ngx_http.c (src\http) :     for (m = 0; ngx_modules[m]; m++) {
ngx_http_block in ngx_http.c (src\http) :         if (ngx_modules[m]->type != NGX_HTTP_MODULE) {
ngx_http_block in ngx_http.c (src\http) :         ngx_modules[m]->ctx_index = ngx_http_max_module++;
ngx_http_block in ngx_http.c (src\http) :     for (m = 0; ngx_modules[m]; m++) {
ngx_http_block in ngx_http.c (src\http) :         if (ngx_modules[m]->type != NGX_HTTP_MODULE) {
ngx_http_block in ngx_http.c (src\http) :         module = ngx_modules[m]->ctx;
ngx_http_block in ngx_http.c (src\http) :         mi = ngx_modules[m]->ctx_index;
ngx_http_block in ngx_http.c (src\http) :     for (m = 0; ngx_modules[m]; m++) {
ngx_http_block in ngx_http.c (src\http) :         if (ngx_modules[m]->type != NGX_HTTP_MODULE) {
ngx_http_block in ngx_http.c (src\http) :         module = ngx_modules[m]->ctx;
ngx_http_block in ngx_http.c (src\http) :     for (m = 0; ngx_modules[m]; m++) {
ngx_http_block in ngx_http.c (src\http) :         if (ngx_modules[m]->type != NGX_HTTP_MODULE) {
ngx_http_block in ngx_http.c (src\http) :         module = ngx_modules[m]->ctx;
ngx_http_block in ngx_http.c (src\http) :         mi = ngx_modules[m]->ctx_index;
ngx_http_block in ngx_http.c (src\http) :     for (m = 0; ngx_modules[m]; m++) {
ngx_http_block in ngx_http.c (src\http) :         if (ngx_modules[m]->type != NGX_HTTP_MODULE) {
ngx_http_block in ngx_http.c (src\http) :         module = ngx_modules[m]->ctx;
ngx_http_core_server in ngx_http_core_module.c (src\http) :     for (i = 0; ngx_modules[i]; i++) {
ngx_http_core_server in ngx_http_core_module.c (src\http) :         if (ngx_modules[i]->type != NGX_HTTP_MODULE) {
ngx_http_core_server in ngx_http_core_module.c (src\http) :         module = ngx_modules[i]->ctx;
ngx_http_core_server in ngx_http_core_module.c (src\http) :             ctx->srv_conf[ngx_modules[i]->ctx_index] = mconf;
ngx_http_core_server in ngx_http_core_module.c (src\http) :             ctx->loc_conf[ngx_modules[i]->ctx_index] = mconf;
ngx_http_core_location in ngx_http_core_module.c (src\http) :     for (i = 0; ngx_modules[i]; i++) {
ngx_http_core_location in ngx_http_core_module.c (src\http) :         if (ngx_modules[i]->type != NGX_HTTP_MODULE) {
ngx_http_core_location in ngx_http_core_module.c (src\http) :         module = ngx_modules[i]->ctx;
ngx_http_core_location in ngx_http_core_module.c (src\http) :             ctx->loc_conf[ngx_modules[i]->ctx_index] =
ngx_http_core_location in ngx_http_core_module.c (src\http) :             if (ctx->loc_conf[ngx_modules[i]->ctx_index] == NULL) {
ngx_http_core_limit_except in ngx_http_core_module.c (src\http) :     for (i = 0; ngx_modules[i]; i++) {
ngx_http_core_limit_except in ngx_http_core_module.c (src\http) :         if (ngx_modules[i]->type != NGX_HTTP_MODULE) {
ngx_http_core_limit_except in ngx_http_core_module.c (src\http) :         module = ngx_modules[i]->ctx;
ngx_http_core_limit_except in ngx_http_core_module.c (src\http) :             ctx->loc_conf[ngx_modules[i]->ctx_index] = mconf;
ngx_http_rewrite_if in ngx_http_rewrite_module.c (src\http\modules) :     for (i = 0; ngx_modules[i]; i++) {
ngx_http_rewrite_if in ngx_http_rewrite_module.c (src\http\modules) :         if (ngx_modules[i]->type != NGX_HTTP_MODULE) {
ngx_http_rewrite_if in ngx_http_rewrite_module.c (src\http\modules) :         module = ngx_modules[i]->ctx;
ngx_http_rewrite_if in ngx_http_rewrite_module.c (src\http\modules) :             ctx->loc_conf[ngx_modules[i]->ctx_index] = mconf;
ngx_http_upstream in ngx_http_upstream.c (src\http) :     for (m = 0; ngx_modules[m]; m++) {
ngx_http_upstream in ngx_http_upstream.c (src\http) :         if (ngx_modules[m]->type != NGX_HTTP_MODULE) {
ngx_http_upstream in ngx_http_upstream.c (src\http) :         module = ngx_modules[m]->ctx;
ngx_http_upstream in ngx_http_upstream.c (src\http) :             ctx->srv_conf[ngx_modules[m]->ctx_index] = mconf;
ngx_http_upstream in ngx_http_upstream.c (src\http) :             ctx->loc_conf[ngx_modules[m]->ctx_index] = mconf;
ngx_mail_block in ngx_mail.c (src\mail) :     for (m = 0; ngx_modules[m]; m++) {
ngx_mail_block in ngx_mail.c (src\mail) :         if (ngx_modules[m]->type != NGX_MAIL_MODULE) {
ngx_mail_block in ngx_mail.c (src\mail) :         ngx_modules[m]->ctx_index = ngx_mail_max_module++;
ngx_mail_block in ngx_mail.c (src\mail) :     for (m = 0; ngx_modules[m]; m++) {
ngx_mail_block in ngx_mail.c (src\mail) :         if (ngx_modules[m]->type != NGX_MAIL_MODULE) {
ngx_mail_block in ngx_mail.c (src\mail) :         module = ngx_modules[m]->ctx;
ngx_mail_block in ngx_mail.c (src\mail) :         mi = ngx_modules[m]->ctx_index;
ngx_mail_block in ngx_mail.c (src\mail) :     for (m = 0; ngx_modules[m]; m++) {
ngx_mail_block in ngx_mail.c (src\mail) :         if (ngx_modules[m]->type != NGX_MAIL_MODULE) {
ngx_mail_block in ngx_mail.c (src\mail) :         module = ngx_modules[m]->ctx;
ngx_mail_block in ngx_mail.c (src\mail) :         mi = ngx_modules[m]->ctx_index;
ngx_mail_core_server in ngx_mail_core_module.c (src\mail) :     for (m = 0; ngx_modules[m]; m++) {
ngx_mail_core_server in ngx_mail_core_module.c (src\mail) :         if (ngx_modules[m]->type != NGX_MAIL_MODULE) {
ngx_mail_core_server in ngx_mail_core_module.c (src\mail) :         module = ngx_modules[m]->ctx;
ngx_mail_core_server in ngx_mail_core_module.c (src\mail) :             ctx->srv_conf[ngx_modules[m]->ctx_index] = mconf;
ngx_mail_core_listen in ngx_mail_core_module.c (src\mail) :     for (m = 0; ngx_modules[m]; m++) {
ngx_mail_core_listen in ngx_mail_core_module.c (src\mail) :         if (ngx_modules[m]->type != NGX_MAIL_MODULE) {
ngx_mail_core_listen in ngx_mail_core_module.c (src\mail) :         module = ngx_modules[m]->ctx;
ngx_mail_core_protocol in ngx_mail_core_module.c (src\mail) :     for (m = 0; ngx_modules[m]; m++) {
ngx_mail_core_protocol in ngx_mail_core_module.c (src\mail) :         if (ngx_modules[m]->type != NGX_MAIL_MODULE) {
ngx_mail_core_protocol in ngx_mail_core_module.c (src\mail) :         module = ngx_modules[m]->ctx;
ngx_single_process_cycle in ngx_process_cycle.c (src\os\unix) :     for (i = 0; ngx_modules[i]; i++) {
ngx_single_process_cycle in ngx_process_cycle.c (src\os\unix) :         if (ngx_modules[i]->init_process) {
ngx_single_process_cycle in ngx_process_cycle.c (src\os\unix) :             if (ngx_modules[i]->init_process(cycle) == NGX_ERROR) {
ngx_single_process_cycle in ngx_process_cycle.c (src\os\unix) :             for (i = 0; ngx_modules[i]; i++) {
ngx_single_process_cycle in ngx_process_cycle.c (src\os\unix) :                 if (ngx_modules[i]->exit_process) {
ngx_single_process_cycle in ngx_process_cycle.c (src\os\unix) :                     ngx_modules[i]->exit_process(cycle);
ngx_master_process_exit in ngx_process_cycle.c (src\os\unix) :     for (i = 0; ngx_modules[i]; i++) {
ngx_master_process_exit in ngx_process_cycle.c (src\os\unix) :         if (ngx_modules[i]->exit_master) {
ngx_master_process_exit in ngx_process_cycle.c (src\os\unix) :             ngx_modules[i]->exit_master(cycle);
ngx_worker_process_init in ngx_process_cycle.c (src\os\unix) :     for (i = 0; ngx_modules[i]; i++) {
ngx_worker_process_init in ngx_process_cycle.c (src\os\unix) :         if (ngx_modules[i]->init_process) {
ngx_worker_process_init in ngx_process_cycle.c (src\os\unix) :             if (ngx_modules[i]->init_process(cycle) == NGX_ERROR) {
ngx_worker_process_exit in ngx_process_cycle.c (src\os\unix) :     for (i = 0; ngx_modules[i]; i++) {
ngx_worker_process_exit in ngx_process_cycle.c (src\os\unix) :         if (ngx_modules[i]->exit_process) {
ngx_worker_process_exit in ngx_process_cycle.c (src\os\unix) :             ngx_modules[i]->exit_process(cycle);
---- ngx_core_module_t Matches (9 in 9 files) ----
nginx.c (src\core) line 161 : static ngx_core_module_t  ngx_core_module_ctx = {
{anonngx_core_module_t} in ngx_conf_file.h (src\core) : } ngx_core_module_t;
ngx_init_cycle in ngx_cycle.c (src\core) :     ngx_core_module_t   *module;
ngx_event.c (src\event) line 92 : static ngx_core_module_t  ngx_events_module_ctx = {
ngx_event_openssl.c (src\event) line 59 : static ngx_core_module_t  ngx_openssl_module_ctx = {
ngx_google_perftools_module.c (src\misc) line 42 : static ngx_core_module_t  ngx_google_perftools_module_ctx = {
ngx_http.c (src\http) line 94 : static ngx_core_module_t  ngx_http_module_ctx = {
ngx_log.c (src\core) line 27 : static ngx_core_module_t  ngx_errlog_module_ctx = {
ngx_mail.c (src\mail) line 49 : static ngx_core_module_t  ngx_mail_module_ctx = {
